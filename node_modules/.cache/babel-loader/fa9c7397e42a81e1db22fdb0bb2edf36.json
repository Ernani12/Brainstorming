{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar data_1 = require(\"./data\");\n\nvar observer_1 = require(\"./observer\");\n\nvar uuid_1 = require(\"./uuid\");\n\nvar Store =\n/** @class */\nfunction () {\n  function Store() {\n    this.data = {};\n    this.observers = {};\n  }\n\n  Store.prototype.get = function (key) {\n    return Store.get(key, this.data);\n  };\n\n  Store.prototype.set = function (key, value) {\n    Store.set(key, value, this.data, this.observers);\n  };\n\n  Store.prototype.updated = function (key) {\n    Store.updated(key, this.data, this.observers);\n  };\n\n  Store.prototype.subscribe = function (key, fn) {\n    return Store.subscribe(key, fn, this.data, this.observers);\n  };\n\n  Store.get = function (key, store) {\n    if (!store) {\n      store = data_1.data;\n    }\n\n    if (key === undefined) {\n      return store;\n    }\n\n    var props = key.split('.');\n\n    for (var _i = 0, props_1 = props; _i < props_1.length; _i++) {\n      var prop = props_1[_i];\n      store = store[prop];\n\n      if (store === undefined) {\n        break;\n      }\n    }\n\n    return store;\n  };\n\n  Store.set = function (key, value, store, obs) {\n    if (!store) {\n      store = data_1.data;\n    }\n\n    if (!obs) {\n      obs = data_1.observers;\n    }\n\n    var props = key.split('.');\n    var _store = store;\n\n    for (var i = 0; i < props.length - 1; ++i) {\n      if (!_store[props[i]]) {\n        _store[props[i]] = {};\n      }\n\n      _store = _store[props[i]];\n    }\n\n    _store[props[props.length - 1]] = value;\n\n    for (var id in obs) {\n      if (key.indexOf(obs[id].key) === 0) {\n        obs[id].fn(Store.get(obs[id].key, store));\n      }\n    }\n  };\n\n  Store.updated = function (key, store, obs) {\n    if (!obs) {\n      obs = data_1.observers;\n    }\n\n    for (var id in obs) {\n      if (key.indexOf(obs[id].key) === 0) {\n        obs[id].fn(Store.get(obs[id].key, store));\n      }\n    }\n  };\n\n  Store.subscribe = function (key, fn, store, obs) {\n    if (!obs) {\n      obs = data_1.observers;\n    }\n\n    var id = uuid_1.s8();\n    var observer = new observer_1.Observer(id, key, fn);\n    obs[id] = observer;\n    var value = Store.get(key, store);\n\n    if (value !== undefined) {\n      fn(value);\n    }\n\n    return observer;\n  };\n\n  return Store;\n}();\n\nexports.Store = Store;","map":null,"metadata":{},"sourceType":"script"}