{"ast":null,"code":"var map = require('map-obj');\n\nvar extend = require('xtend');\n\nvar directional = require('./directional');\n\nvar isColor = require('./is-color');\n\nvar isLength = require('./is-length');\n\nvar normalize = require('./normalize-color');\n\nvar WIDTH = /^(thin|medium|thick)$/;\nvar STYLE = /^(none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset)$/i;\nvar KEYWORD = /^(inherit|initial)$/i;\n\nvar suffix = function (suffix) {\n  return function (value) {\n    var longhand = directional(value);\n    return longhand && map(longhand, function (key, value) {\n      return ['border-' + key + '-' + suffix, value];\n    });\n  };\n};\n\nvar direction = function (direction) {\n  return function (value) {\n    var longhand = all(value);\n    return longhand && map(longhand, function (key, value) {\n      return ['border-' + direction + '-' + key, value];\n    });\n  };\n};\n\nvar all = function (value) {\n  var values = normalize(value).split(/\\s+/);\n  var first = values[0];\n  if (values.length > 3) return;\n\n  if (values.length === 1 && KEYWORD.test(first)) {\n    return {\n      width: first,\n      style: first,\n      color: first\n    };\n  }\n\n  var result = {};\n\n  for (var i = 0; i < values.length; i++) {\n    var v = values[i];\n\n    if (WIDTH.test(v) || isLength(v)) {\n      if (result.width) return;\n      result.width = v;\n    } else if (STYLE.test(v)) {\n      if (result.style) return;\n      result.style = v;\n    } else if (isColor(v)) {\n      if (result.color) return;\n      result.color = v;\n    } else {\n      return;\n    }\n  }\n\n  return result;\n};\n\nvar border = function (value) {\n  var longhand = all(value);\n  return longhand && Object.keys(longhand).reduce(function (acc, key) {\n    var props = exports[key](longhand[key]);\n    return extend(acc, props);\n  }, {});\n};\n\nborder.width = suffix('width');\nborder.style = suffix('style');\nborder.color = suffix('color');\nborder.top = direction('top');\nborder.right = direction('right');\nborder.bottom = direction('bottom');\nborder.left = direction('left');\nmodule.exports = exports = border;","map":null,"metadata":{},"sourceType":"script"}