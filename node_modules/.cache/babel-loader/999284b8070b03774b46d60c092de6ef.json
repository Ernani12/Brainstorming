{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slate = require('slate');\n\nvar _changes = require('../changes');\n\nvar _utils = require('../utils');\n\nfunction isEmptyListItem(editor, listItem) {\n  if (editor.isVoid(listItem) || listItem.text !== '') {\n    return false;\n  }\n\n  try {\n    var nodes = listItem.nodes.get(0).nodes;\n    if (nodes.size !== 1) return false;\n    var child = nodes.get(0);\n\n    if (!_slate.Text.isText(child)) {\n      return false;\n    }\n\n    return child.text === '';\n  } catch (e) {\n    return true;\n  }\n}\n/**\n * User pressed Enter in an editor\n *\n * Enter in a list item should split the list item\n * Enter in an empty list item should remove it\n * Shift+Enter in a list item should make a new line\n */\n\n\nfunction onEnter(event, change, next, opts) {\n  // Pressing Shift+Enter\n  // should split block normally\n  if (event.shiftKey) {\n    return next();\n  }\n\n  var value = change.value;\n  var currentItem = (0, _utils.getCurrentItem)(opts, value); // Not in a list\n\n  if (!currentItem) {\n    return next();\n  }\n\n  event.preventDefault(); // If expanded, delete first.\n\n  if (value.selection.isExpanded) {\n    change.delete();\n  }\n\n  if (isEmptyListItem(change, currentItem)) {\n    // Block is empty, we exit the list\n    if ((0, _utils.getItemDepth)(opts, value) > 1) {\n      return (0, _changes.decreaseItemDepth)(opts, change);\n    } // Exit list\n\n\n    return (0, _changes.unwrapList)(opts, change);\n  } // Split list item\n\n\n  return (0, _changes.splitListItem)(opts, change);\n}\n\nexports.default = onEnter;","map":null,"metadata":{},"sourceType":"script"}