{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = CollapsableHeadings;\n\nvar _slate = require(\"slate\");\n\nvar _headingToSlug = require(\"../lib/headingToSlug\");\n\nvar _headingToSlug2 = _interopRequireDefault(_headingToSlug);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction CollapsableHeadings() {\n  var queries = {\n    getPathForHeadingNode: function getPathForHeadingNode(editor, node) {\n      var slugish = (0, _headingToSlug2.default)(editor.value.document, node);\n      return (editor.props.id || window.location.pathname) + \"#\" + slugish;\n    }\n  };\n  var commands = {\n    showContentBelow: function showContentBelow(editor, node) {\n      return editor.updateContentBelow(node, false);\n    },\n    hideContentBelow: function hideContentBelow(editor, node) {\n      return editor.updateContentBelow(node, true);\n    },\n    toggleContentBelow: function toggleContentBelow(editor, node) {\n      var collapsed = node.data.get(\"collapsed\");\n      var persistKey = editor.getPathForHeadingNode(node);\n\n      if (collapsed) {\n        localStorage.removeItem(persistKey);\n        return editor.showContentBelow(node);\n      } else {\n        localStorage.setItem(persistKey, \"collapsed\");\n        return editor.hideContentBelow(node);\n      }\n    },\n    updateContentBelow: function updateContentBelow(editor, node, hidden) {\n      var document = editor.value.document;\n      editor.setNodeByKey(node.key, {\n        data: {\n          collapsed: hidden\n        }\n      });\n      var headingLevel = parseInt(node.type.replace(/^heading/, \"\"), 10);\n      var headingLevels = [];\n\n      for (var level = headingLevel; level > 0; level--) {\n        headingLevels.push(\"heading\" + level);\n      }\n\n      var active = void 0;\n      document.nodes.forEach(function (n) {\n        if (active && headingLevels.includes(n.type)) {\n          active = false;\n          return;\n        }\n\n        if (active) {\n          editor.setNodeByKey(n.key, {\n            data: _extends({}, n.data.toJS(), {\n              hidden: hidden\n            })\n          });\n        }\n\n        if (n === node) active = true;\n      });\n    }\n  };\n\n  function onKeyDown(ev, editor, next) {\n    var startBlock = editor.value.startBlock;\n    if (!startBlock || !startBlock.type || !startBlock.type.match(/heading/) || !startBlock.data.get(\"collapsed\")) return next(); // editing a heading will always uncollapse the contents beneath as the persist\n    // key is based on the slug which is based on the heading contents\n\n    editor.toggleContentBelow(startBlock);\n    return next();\n  }\n\n  function normalizeNode(node, editor, next) {\n    if (node.object !== \"block\") return next();\n\n    if (node.type.match(/heading/)) {\n      var collapsed = node.data.get(\"collapsed\");\n      var persistKey = editor.getPathForHeadingNode(node);\n      var persistedState = localStorage.getItem(persistKey);\n      var shouldBeCollapsed = persistedState === \"collapsed\"; // ensures that on load content under collapsed headings is correctly hidden\n\n      if (shouldBeCollapsed && !collapsed) {\n        return function (editor) {\n          return editor.updateContentBelow(node, shouldBeCollapsed).setNodeByKey(node.key, {\n            data: {\n              collapsed: shouldBeCollapsed\n            }\n          });\n        };\n      }\n    }\n\n    return next();\n  }\n\n  return {\n    queries: queries,\n    commands: commands,\n    normalizeNode: normalizeNode,\n    onKeyDown: onKeyDown\n  };\n}","map":null,"metadata":{},"sourceType":"script"}