{"ast":null,"code":"var url = require('css-url-regex');\n\nvar map = require('map-obj');\n\nvar isColor = require('./is-color');\n\nvar isLength = require('./is-length');\n\nvar normalizeColor = require('./normalize-color');\n\nvar ATTACHMENT = /^(fixed|local|scroll)$/;\nvar BOX = /^(border-box|padding-box|content-box)$/;\nvar IMAGE = new RegExp('^(none|' + url().source + ')$', 'i');\nvar REPEAT_SINGLE = /^(repeat-x|repeat-y)$/i;\nvar REPEAT_DOUBLE = /^(repeat|space|round|no-repeat)$/i;\nvar POSITION_HORIZONTAL = /^(left|center|right)$/;\nvar POSITION_VERTICAL = /^(top|center|bottom)$/;\nvar SIZE_SINGLE = /^(cover|contain)$/;\nvar KEYWORD = /^(inherit|initial)$/i;\n\nvar normalizeUrl = function (value) {\n  return value.replace(url(), function (match) {\n    return match.replace(/^url\\(\\s+/, 'url(').replace(/\\s+\\)$/, ')');\n  });\n};\n\nmodule.exports = function (value) {\n  var result = {};\n  var values = normalizeUrl(normalizeColor(value)).replace(/\\(.*\\/.*\\)|(\\/)+/g, (match, group1) => !group1 ? match : ' / ').split(/\\s+/);\n  var first = values[0];\n\n  if (values.length === 1 && KEYWORD.test(first)) {\n    return {\n      'background-attachment': first,\n      'background-clip': first,\n      'background-image': first,\n      'background-repeat': first,\n      'background-color': first,\n      'background-position': first,\n      'background-size': first\n    };\n  }\n\n  for (var i = 0; i < values.length; i++) {\n    var v = values[i];\n\n    if (ATTACHMENT.test(v)) {\n      if (result.attachment) return;\n      result.attachment = v;\n    } else if (BOX.test(v)) {\n      if (result.clip) return;\n      result.clip = v;\n    } else if (IMAGE.test(v)) {\n      if (result.image) return;\n      result.image = v;\n    } else if (REPEAT_SINGLE.test(v)) {\n      if (result.repeat) return;\n      result.repeat = v;\n    } else if (REPEAT_DOUBLE.test(v)) {\n      if (result.repeat) return;\n      var n = values[i + 1];\n\n      if (n && REPEAT_DOUBLE.test(n)) {\n        v += ' ' + n;\n        i++;\n      }\n\n      result.repeat = v;\n    } else if (isColor(v)) {\n      if (result.color) return;\n      result.color = v;\n    } else if (POSITION_HORIZONTAL.test(v) || POSITION_VERTICAL.test(v) || isLength(v)) {\n      if (result.position) return;\n      var n = values[i + 1];\n      var isHorizontal = POSITION_HORIZONTAL.test(v) || isLength(v);\n      var isVertical = POSITION_VERTICAL.test(n) || isLength(n);\n\n      if (isHorizontal && isVertical) {\n        result.position = v + ' ' + n;\n        i++;\n      } else {\n        result.position = v;\n      }\n\n      v = values[i + 1];\n\n      if (v === '/') {\n        i += 2;\n        v = values[i];\n\n        if (SIZE_SINGLE.test(v)) {\n          result.size = v;\n        } else if (v === 'auto' || isLength(v)) {\n          n = values[i + 1];\n\n          if (n === 'auto' || isLength(n)) {\n            v += ' ' + n;\n            i++;\n          }\n\n          result.size = v;\n        } else {\n          return;\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  return map(result, function (key, value) {\n    return ['background-' + key, value];\n  });\n};","map":null,"metadata":{},"sourceType":"script"}