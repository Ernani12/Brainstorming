{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _options = require('./options');\n\nvar _options2 = _interopRequireDefault(_options);\n\nvar _handlers = require('./handlers');\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * A Slate plugin to handle keyboard events in lists.\n */\n\n\nfunction EditBlockquote() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  opts = new _options2.default(opts);\n  var corePlugin = (0, _core2.default)(opts);\n  return _extends({}, corePlugin, {\n    onKeyDown: _handlers.onKeyDown.bind(null, opts)\n  });\n}\n\nexports.default = EditBlockquote;","map":null,"metadata":{},"sourceType":"script"}