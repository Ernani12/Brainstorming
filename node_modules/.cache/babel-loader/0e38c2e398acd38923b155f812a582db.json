{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isEqual2 = require(\"lodash/isEqual\");\n\nvar _isEqual3 = _interopRequireDefault(_isEqual2);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar React = _interopRequireWildcard(_react);\n\nvar _reactPortal = require(\"react-portal\");\n\nvar _slate = require(\"slate\");\n\nvar _slateReact = require(\"slate-react\");\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _styledComponents2 = _interopRequireDefault(_styledComponents);\n\nvar _outlineIcons = require(\"outline-icons\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction findClosestRootNode(value, ev) {\n  var previous = void 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = value.document.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var node = _step.value;\n      var element = (0, _slateReact.findDOMNode)(node);\n      var bounds = element.getBoundingClientRect();\n      if (bounds.top > ev.clientY) return previous;\n      previous = {\n        node: node,\n        element: element,\n        bounds: bounds\n      };\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return previous;\n}\n\nvar BlockInsert = function (_React$Component) {\n  _inherits(BlockInsert, _React$Component);\n\n  function BlockInsert() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BlockInsert);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BlockInsert.__proto__ || Object.getPrototypeOf(BlockInsert)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      top: -1000,\n      left: -1000,\n      active: false,\n      closestRootNode: undefined\n    }, _this.componentDidMount = function () {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"mousemove\", _this.handleMouseMove);\n      }\n    }, _this.componentWillUnmount = function () {\n      if (_this.mouseMoveTimeout) clearTimeout(_this.mouseMoveTimeout);\n\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"mousemove\", _this.handleMouseMove);\n      }\n    }, _this.setInactive = function () {\n      _this.setState({\n        active: false\n      });\n    }, _this.handleMouseMove = function (ev) {\n      var triggerPoint = _this.ref ? _this.ref.getBoundingClientRect().left + 300 : window.innerWidth;\n      var result = findClosestRootNode(_this.props.editor.value, ev);\n\n      var newState = _extends({}, _this.state);\n\n      newState.active = ev.clientX < triggerPoint;\n\n      if (result) {\n        newState.closestRootNode = result.node; // do not show block menu when it's open, the paragraph isn't empty\n        // or the current node is an embed.\n\n        var hideToolbar = result.node.type !== \"paragraph\" || !!result.node.text.trim() || result.node.isVoid;\n\n        if (hideToolbar) {\n          newState.left = -1000;\n          newState.active = false;\n        } else {\n          newState.left = Math.round(result.bounds.left - 20);\n          newState.top = Math.round(result.bounds.top + window.scrollY);\n        }\n      }\n\n      if (_this.state.active) {\n        if (_this.mouseMoveTimeout) clearTimeout(_this.mouseMoveTimeout);\n        _this.mouseMoveTimeout = setTimeout(_this.setInactive, 2000);\n      }\n\n      if (!(0, _isEqual3.default)(newState, _this.state)) {\n        _this.setState(newState);\n      }\n    }, _this.handleClick = function (ev) {\n      ev.preventDefault();\n      ev.stopPropagation();\n\n      _this.setState({\n        active: false\n      });\n\n      var editor = _this.props.editor; // remove any existing toolbars in the document as a fail safe\n\n      editor.value.document.nodes.forEach(function (node) {\n        if (node.type === \"block-toolbar\") {\n          editor.setNodeByKey(node.key, {\n            type: \"paragraph\",\n            isVoid: false\n          });\n        }\n      });\n      var node = _this.state.closestRootNode;\n      if (!node) return; // we're on an empty paragraph. just replace it with the block toolbar\n\n      if (!node.text.trim() && node.type === \"paragraph\") {\n        editor.setNodeByKey(node.key, {\n          type: \"block-toolbar\",\n          isVoid: true\n        });\n      }\n    }, _this.setRef = function (ref) {\n      _this.ref = ref;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(BlockInsert, [{\n    key: \"render\",\n    value: function render() {\n      var theme = this.props.theme;\n      var style = {\n        top: this.state.top + \"px\",\n        left: this.state.left + \"px\"\n      };\n      return React.createElement(React.Fragment, null, React.createElement(\"span\", {\n        ref: this.setRef\n      }), React.createElement(_reactPortal.Portal, null, React.createElement(Trigger, {\n        active: this.state.active,\n        style: style\n      }, React.createElement(_outlineIcons.PlusIcon, {\n        onClick: this.handleClick,\n        color: theme.blockToolbarTrigger\n      }))));\n    }\n  }]);\n\n  return BlockInsert;\n}(React.Component);\n\nvar Trigger = _styledComponents2.default.div.withConfig({\n  displayName: \"BlockInsert__Trigger\",\n  componentId: \"sc-9hcx4i-0\"\n})([\"position:absolute;z-index:\", \";opacity:0;background-color:\", \";transition:opacity 150ms cubic-bezier(0.175,0.885,0.32,1.275),transform 150ms cubic-bezier(0.175,0.885,0.32,1.275);line-height:0;margin-left:-10px;box-shadow:inset 0 0 0 2px \", \";border-radius:100%;transform:scale(0.9);cursor:pointer;&:hover{background-color:\", \";svg{fill:\", \";}}\", \";\"], function (props) {\n  return props.theme.zIndex + 99;\n}, function (props) {\n  return props.theme.background;\n}, function (props) {\n  return props.theme.blockToolbarTrigger;\n}, function (props) {\n  return props.theme.blockToolbarTrigger;\n}, function (props) {\n  return props.theme.blockToolbarTriggerIcon;\n}, function (_ref2) {\n  var active = _ref2.active;\n  return active && \"\\n    transform: scale(1);\\n    opacity: .9;\\n  \";\n});\n\nexports.default = (0, _styledComponents.withTheme)(BlockInsert);","map":null,"metadata":{},"sourceType":"script"}