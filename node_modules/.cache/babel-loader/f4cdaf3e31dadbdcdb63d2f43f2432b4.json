{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar point_1 = require(\"topology-core/models/point\");\n\nvar direction_1 = require(\"topology-core/models/direction\");\n\nfunction forkHAnchors(node) {\n  node.anchors.push(new point_1.Point(node.rect.x, node.rect.y + node.rect.height / 2, direction_1.Direction.Left));\n  node.anchors.push(new point_1.Point(node.rect.ex, node.rect.y + node.rect.height / 2, direction_1.Direction.Right));\n  var dis = 5;\n\n  for (var i = dis; node.rect.x + i < node.rect.ex; i = i + dis) {\n    var pt1 = new point_1.Point(node.rect.x + i, node.rect.y, direction_1.Direction.Up);\n    var pt2 = new point_1.Point(node.rect.x + i, node.rect.ey, direction_1.Direction.Bottom);\n    pt1.hidden = true;\n    pt1.out = true;\n    pt2.hidden = true;\n    pt2.out = true;\n    node.anchors.push(pt1);\n    node.anchors.push(pt2);\n  }\n}\n\nexports.forkHAnchors = forkHAnchors;\n\nfunction forkVAnchors(node) {\n  node.anchors.push(new point_1.Point(node.rect.x + node.rect.width / 2, node.rect.y, direction_1.Direction.Up));\n  node.anchors.push(new point_1.Point(node.rect.x + node.rect.width / 2, node.rect.ey, direction_1.Direction.Bottom));\n  var dis = 5;\n\n  for (var i = dis; node.rect.y + i < node.rect.ey; i = i + dis) {\n    var pt1 = new point_1.Point(node.rect.x, node.rect.y + i, direction_1.Direction.Left);\n    var pt2 = new point_1.Point(node.rect.ex, node.rect.y + i, direction_1.Direction.Right);\n    pt1.hidden = true;\n    pt1.out = true;\n    pt2.hidden = true;\n    pt2.out = true;\n    node.anchors.push(pt1);\n    node.anchors.push(pt2);\n  }\n}\n\nexports.forkVAnchors = forkVAnchors;","map":null,"metadata":{},"sourceType":"script"}