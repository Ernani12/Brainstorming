{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction line(ctx, from, to, size) {\n  size += ctx.lineWidth * 3;\n  ctx.translate(to.x, to.y);\n  ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n  ctx.translate(-to.x - ctx.lineWidth / 5, -to.y - ctx.lineWidth / 5);\n  ctx.moveTo(to.x, to.y);\n  ctx.lineTo(to.x - size, to.y - size / 3);\n  ctx.moveTo(to.x, to.y);\n  ctx.lineTo(to.x - size, to.y + size / 3);\n  ctx.stroke();\n}\n\nexports.line = line;\n\nfunction lineUp(ctx, from, to, size) {\n  size += ctx.lineWidth * 3;\n  ctx.translate(to.x, to.y);\n  ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n  ctx.translate(-to.x - ctx.lineWidth / 5, -to.y - ctx.lineWidth / 5);\n\n  if (to.x > from.x) {\n    ctx.moveTo(to.x, to.y);\n    ctx.lineTo(to.x - size, to.y - size / 3);\n  } else {\n    ctx.moveTo(to.x, to.y);\n    ctx.lineTo(to.x - size, to.y + size / 3);\n  }\n\n  ctx.stroke();\n}\n\nexports.lineUp = lineUp;\n\nfunction lineDown(ctx, from, to, size) {\n  size += ctx.lineWidth * 3;\n  ctx.translate(to.x, to.y);\n  ctx.rotate(Math.atan2(to.y - from.y, to.x - from.x));\n  ctx.translate(-to.x - ctx.lineWidth / 5, -to.y - ctx.lineWidth / 5);\n\n  if (to.x < from.x) {\n    ctx.moveTo(to.x, to.y);\n    ctx.lineTo(to.x - size, to.y - size / 3);\n  } else {\n    ctx.moveTo(to.x, to.y);\n    ctx.lineTo(to.x - size, to.y + size / 3);\n  }\n\n  ctx.stroke();\n}\n\nexports.lineDown = lineDown;","map":null,"metadata":{},"sourceType":"script"}