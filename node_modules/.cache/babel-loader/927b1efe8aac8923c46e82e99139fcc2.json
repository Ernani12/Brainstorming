{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernan\\\\Desktop\\\\UnifeiFreeRoomClassInteractive\\\\Brainstorming\\\\src\\\\component\\\\mindmap.js\";\nimport React from \"react\";\nimport { Diagram } from \"@blink-mind/renderer-react\";\nimport RichTextEditorPlugin from \"@blink-mind/plugin-rich-text-editor\";\nimport { JsonSerializerPlugin } from \"@blink-mind/plugin-json-serializer\";\nimport { ThemeSelectorPlugin } from \"@blink-mind/plugin-theme-selector\";\nimport TopologyDiagramPlugin from \"@blink-mind/plugin-topology-diagram\";\nimport { TopicReferencePlugin, SearchPlugin } from \"@blink-mind/plugins\";\nimport { Toolbar } from \"./toolbar/toolbar\";\nimport { generateSimpleModel } from \"../utils\";\nimport \"@blink-mind/renderer-react/lib/main.css\";\nimport debug from \"debug\";\nconst plugins = [RichTextEditorPlugin(), ThemeSelectorPlugin(), TopicReferencePlugin(), SearchPlugin(), TopologyDiagramPlugin(), JsonSerializerPlugin()];\nexport class Mindmap extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.diagramRef = ref => {\n      this.diagram = ref;\n      this.setState({});\n    };\n\n    this.onClickUndo = e => {\n      const props = this.diagram.getDiagramProps();\n      const {\n        controller\n      } = props;\n      controller.run(\"undo\", props);\n    };\n\n    this.onClickRedo = e => {\n      const props = this.diagram.getDiagramProps();\n      const {\n        controller\n      } = props;\n      controller.run(\"redo\", props);\n    };\n\n    this.onChange = (model, callback) => {\n      this.setState({\n        model\n      }, callback);\n    };\n\n    this.initModel();\n  }\n\n  initModel() {\n    const model = generateSimpleModel();\n    this.setState({\n      model\n    });\n  }\n\n  renderDiagram() {\n    return /*#__PURE__*/React.createElement(Diagram, {\n      ref: this.diagramRef,\n      model: this.state.model,\n      onChange: this.onChange,\n      plugins: plugins,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    });\n  }\n\n  renderToolbar() {\n    const props = this.diagram.getDiagramProps();\n    const {\n      controller\n    } = props;\n    const canUndo = controller.run(\"canUndo\", props);\n    const canRedo = controller.run(\"canRedo\", props);\n    const toolbarProps = {\n      diagram: this.diagram,\n      onClickUndo: this.onClickUndo,\n      onClickRedo: this.onClickRedo,\n      canUndo,\n      canRedo\n    };\n    return /*#__PURE__*/React.createElement(Toolbar, Object.assign({}, toolbarProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mindmap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, this.diagram && this.renderToolbar(), this.renderDiagram());\n  }\n\n}\nexport default Mindmap;","map":{"version":3,"sources":["C:/Users/ernan/Desktop/UnifeiFreeRoomClassInteractive/Brainstorming/src/component/mindmap.js"],"names":["React","Diagram","RichTextEditorPlugin","JsonSerializerPlugin","ThemeSelectorPlugin","TopologyDiagramPlugin","TopicReferencePlugin","SearchPlugin","Toolbar","generateSimpleModel","debug","plugins","Mindmap","Component","constructor","props","diagramRef","ref","diagram","setState","onClickUndo","e","getDiagramProps","controller","run","onClickRedo","onChange","model","callback","initModel","renderDiagram","state","renderToolbar","canUndo","canRedo","toolbarProps","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Diagram } from \"@blink-mind/renderer-react\";\nimport RichTextEditorPlugin from \"@blink-mind/plugin-rich-text-editor\";\nimport { JsonSerializerPlugin } from \"@blink-mind/plugin-json-serializer\";\nimport { ThemeSelectorPlugin } from \"@blink-mind/plugin-theme-selector\";\nimport TopologyDiagramPlugin from \"@blink-mind/plugin-topology-diagram\";\nimport { TopicReferencePlugin, SearchPlugin } from \"@blink-mind/plugins\";\nimport { Toolbar } from \"./toolbar/toolbar\";\nimport { generateSimpleModel } from \"../utils\";\nimport \"@blink-mind/renderer-react/lib/main.css\";\nimport debug from \"debug\";\n\n\nconst plugins = [\n  RichTextEditorPlugin(),\n  ThemeSelectorPlugin(),\n  TopicReferencePlugin(),\n  SearchPlugin(),\n  TopologyDiagramPlugin(),\n  JsonSerializerPlugin()\n];\n\nexport class Mindmap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initModel();\n  }\n\n  diagram;\n  diagramRef = ref => {\n    this.diagram = ref;\n    this.setState({});\n  };\n\n  initModel() {\n    const model = generateSimpleModel();\n    this.setState(  { model });\n  }\n\n  onClickUndo = e => {\n    const props = this.diagram.getDiagramProps();\n    const { controller } = props;\n    controller.run(\"undo\", props);\n  };\n\n  onClickRedo = e => {\n    const props = this.diagram.getDiagramProps();\n    const { controller } = props;\n    controller.run(\"redo\", props);\n  };\n\n  renderDiagram() {\n    return (\n      <Diagram\n        ref={this.diagramRef}\n        model={this.state.model}\n        onChange={this.onChange}\n        plugins={plugins}\n      />\n    );\n  }\n\n  renderToolbar() {\n    const props = this.diagram.getDiagramProps();\n    const { controller } = props;\n    const canUndo = controller.run(\"canUndo\", props);\n    const canRedo = controller.run(\"canRedo\", props);\n    const toolbarProps = {\n      diagram: this.diagram,\n      onClickUndo: this.onClickUndo,\n      onClickRedo: this.onClickRedo,\n      canUndo,\n      canRedo\n    };\n    return <Toolbar {...toolbarProps} />;\n  }\n\n  onChange = (model, callback) => {\n    this.setState(\n      {\n        model\n      },\n      callback\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"mindmap\">\n        {this.diagram && this.renderToolbar()}\n        {this.renderDiagram()}\n      </div>\n    );\n  }\n}\n\nexport default Mindmap;\n"]},"metadata":{},"sourceType":"module"}