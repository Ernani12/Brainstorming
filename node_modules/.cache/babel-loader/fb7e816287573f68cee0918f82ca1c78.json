{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar le5le_store_1 = require(\"le5le-store\");\n\nvar status_1 = require(\"./models/status\");\n\nvar DivLayer =\n/** @class */\nfunction () {\n  function DivLayer(parentElem, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.parentElem = parentElem;\n    this.options = options;\n    this.data = le5le_store_1.Store.get('topology-data');\n    this.canvas = document.createElement('div');\n    this.player = document.createElement('div');\n    this.videos = {};\n    this.audios = {};\n    this.iframes = {};\n    this.elements = {};\n    this.gifs = {};\n\n    this.addDiv = function (node) {\n      if (node.audio) {\n        if (_this.audios[node.id] && _this.audios[node.id].media.src !== node.audio) {\n          _this.audios[node.id].media.src = node.audio;\n        }\n\n        _this.setElemPosition(node, _this.audios[node.id] && _this.audios[node.id].player || _this.addMedia(node, 'audio'));\n      }\n\n      if (node.video) {\n        if (_this.videos[node.id] && _this.videos[node.id].media.src !== node.video) {\n          _this.videos[node.id].media.src = node.video;\n        }\n\n        _this.setElemPosition(node, _this.videos[node.id] && _this.videos[node.id].player || _this.addMedia(node, 'video'));\n      }\n\n      if (node.iframe) {\n        if (_this.iframes[node.id] && _this.iframes[node.id].src !== node.iframe) {\n          _this.iframes[node.id].src = node.iframe;\n        }\n\n        _this.setElemPosition(node, _this.iframes[node.id] || _this.addIframe(node));\n      }\n\n      if (node.elementId) {\n        if (!_this.elements[node.id]) {\n          _this.elements[node.id] = document.getElementById(node.elementId);\n\n          if (_this.elements[node.id]) {\n            _this.canvas.appendChild(_this.elements[node.id]);\n          }\n        }\n\n        _this.setElemPosition(node, _this.elements[node.id]);\n      }\n\n      if (node.gif) {\n        if (node.image.indexOf('.gif') < 0) {\n          node.gif = false;\n\n          _this.canvas.removeChild(_this.gifs[node.id]);\n\n          _this.gifs[node.id] = null;\n        } else {\n          if (_this.gifs[node.id] && _this.gifs[node.id].src !== node.image) {\n            _this.gifs[node.id].src = node.image;\n          }\n\n          _this.setElemPosition(node, _this.gifs[node.id] || _this.addGif(node));\n        }\n      }\n\n      if (node.children) {\n        for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n          var child = _a[_i];\n\n          _this.addDiv(child);\n        }\n      }\n    };\n\n    if (!this.options.playIcon) {\n      this.options.playIcon = 'iconfont icon-play';\n    }\n\n    if (!this.options.pauseIcon) {\n      this.options.pauseIcon = 'iconfont icon-pause';\n    }\n\n    if (!this.options.fullScreenIcon) {\n      this.options.fullScreenIcon = 'iconfont icon-full-screen';\n    }\n\n    if (!this.options.loopIcon) {\n      this.options.loopIcon = 'iconfont icon-loop';\n    }\n\n    this.canvas.style.position = 'absolute';\n    this.canvas.style.left = '0';\n    this.canvas.style.top = '0';\n    this.canvas.style.outline = 'none';\n    this.canvas.style.background = 'transparent';\n    parentElem.appendChild(this.canvas);\n    parentElem.appendChild(this.player);\n    this.createPlayer();\n    this.subcribe = le5le_store_1.Store.subscribe('LT:addDiv', this.addDiv);\n    this.subcribeNode = le5le_store_1.Store.subscribe('LT:activeNode', function (node) {\n      if (!node || !node.video && !node.audio) {\n        _this.player.style.top = '-99999px';\n        return;\n      }\n\n      if (node.audio && _this.audios[node.id]) {\n        _this.media = _this.audios[node.id].media;\n      } else if (node.video && _this.videos[node.id]) {\n        _this.media = _this.videos[node.id].media;\n      } else {\n        return;\n      }\n\n      _this.curNode = node;\n      _this.player.style.top = _this.parentElem.offsetTop + _this.parentElem.clientHeight + 'px';\n      _this.player.style.left = _this.parentElem.getBoundingClientRect().left + 'px';\n      _this.player.style.width = _this.parentElem.clientWidth + 'px';\n\n      _this.getMediaCurrent();\n\n      if (_this.media.paused) {\n        _this.playBtn.className = _this.options.playIcon;\n      } else {\n        _this.playBtn.className = _this.options.pauseIcon;\n      }\n    });\n    document.addEventListener('fullscreenchange', function (e) {\n      if (!_this.media) {\n        return;\n      }\n\n      if (document.fullscreen) {\n        _this.media.controls = true;\n        _this.media.style.userSelect = 'initial';\n        _this.media.style.pointerEvents = 'initial';\n      } else {\n        _this.media.style.userSelect = 'none';\n        _this.media.style.pointerEvents = 'none';\n        _this.media.controls = false;\n      }\n    });\n  }\n\n  DivLayer.prototype.createPlayer = function () {\n    var _this = this;\n\n    this.player.style.position = 'fixed';\n    this.player.style.outline = 'none';\n    this.player.style.top = '-99999px';\n    this.player.style.height = '40px';\n    this.player.style.padding = '10px 15px';\n    this.player.style.background = 'rgba(200,200,200,.1)';\n    this.player.style.display = 'flex';\n    this.player.style.alignItems = 'center';\n    this.player.style.userSelect = 'initial';\n    this.player.style.pointerEvents = 'initial';\n    this.player.style.zIndex = '1';\n    this.playBtn = document.createElement('i');\n    this.currentTime = document.createElement('span');\n    this.progress = document.createElement('div');\n    this.progressCurrent = document.createElement('div');\n    this.loop = document.createElement('i');\n    var fullScreen = document.createElement('i');\n    this.playBtn.className = this.options.playIcon;\n    this.playBtn.style.fontSize = '18px';\n    this.playBtn.style.lineHeight = '20px';\n    this.playBtn.style.cursor = 'pointer';\n    this.currentTime.style.padding = '0 10px';\n    this.currentTime.innerText = '0 / 0';\n    this.progress.style.position = 'relative';\n    this.progress.style.flexGrow = '1';\n    this.progress.style.top = '0';\n    this.progress.style.height = '4px';\n    this.progress.style.background = '#ccc';\n    this.progress.style.borderRadius = '2px';\n    this.progress.style.overflow = 'hidden';\n    this.progress.style.cursor = 'pointer';\n    this.progressCurrent.style.position = 'absolute';\n    this.progressCurrent.style.left = '0';\n    this.progressCurrent.style.top = '0';\n    this.progressCurrent.style.bottom = '0';\n    this.progressCurrent.style.width = '0';\n    this.progressCurrent.style.background = '#52c41a';\n    this.loop.style.margin = '0 10px';\n    this.loop.style.padding = '2px 5px';\n    this.loop.style.borderRadius = '2px';\n    this.loop.className = this.options.loopIcon;\n    this.loop.style.fontSize = '18px';\n    this.loop.style.lineHeight = '20px';\n    this.loop.style.cursor = 'pointer';\n    fullScreen.className = this.options.fullScreenIcon;\n    fullScreen.style.fontSize = '17px';\n    fullScreen.style.lineHeight = '20px';\n    fullScreen.style.cursor = 'pointer';\n    this.player.appendChild(this.playBtn);\n    this.player.appendChild(this.currentTime);\n    this.player.appendChild(this.progress);\n    this.progress.appendChild(this.progressCurrent);\n    this.player.appendChild(this.loop);\n    this.player.appendChild(fullScreen);\n\n    this.playBtn.onclick = function () {\n      if (_this.media.paused) {\n        _this.media.play();\n\n        _this.playBtn.className = _this.options.pauseIcon;\n      } else {\n        _this.media.pause();\n\n        _this.playBtn.className = _this.options.playIcon;\n      }\n    };\n\n    this.progress.onclick = function (e) {\n      _this.media.currentTime = e.offsetX / _this.progress.clientWidth * _this.media.duration;\n    };\n\n    this.loop.onclick = function () {\n      _this.media.loop = !_this.media.loop;\n      _this.curNode.playLoop = _this.media.loop;\n\n      if (_this.media.loop) {\n        _this.loop.style.background = '#ddd';\n      } else {\n        _this.loop.style.background = 'none';\n      }\n    };\n\n    fullScreen.onclick = function () {\n      _this.media.requestFullscreen();\n    };\n  };\n\n  DivLayer.prototype.getMediaCurrent = function () {\n    if (!this.media) {\n      return;\n    }\n\n    this.currentTime.innerText = this.formatSeconds(this.media.currentTime) + ' / ' + this.formatSeconds(this.media.duration);\n    this.progressCurrent.style.width = this.media.currentTime / this.media.duration * this.progress.clientWidth + 'px';\n  };\n\n  DivLayer.prototype.addMedia = function (node, type) {\n    var _this = this;\n\n    var player = document.createElement('div');\n    var current = document.createElement('div');\n    var media = document.createElement(type);\n    current.style.position = 'absolute';\n    current.style.outline = 'none';\n    current.style.left = '0';\n    current.style.bottom = '0';\n    current.style.height = '2px';\n    current.style.background = '#52c41a';\n    media.style.position = 'absolute';\n    media.style.outline = 'none';\n    media.style.left = '0';\n    media.style.right = '0';\n    media.style.top = '0';\n    media.style.bottom = '0';\n\n    if (type === 'video') {\n      media.style.width = node.rect.width + 'px';\n      media.style.height = node.rect.height + 'px';\n    }\n\n    player.style.background = 'transparent';\n\n    if (node.play === 1) {\n      media.autoplay = true;\n    }\n\n    media.loop = node.playLoop;\n\n    media.ontimeupdate = function () {\n      current.style.width = media.currentTime / media.duration * node.rect.width + 'px';\n\n      _this.getMediaCurrent();\n\n      if (_this.media === media) {\n        if (node.playLoop) {\n          media.loop = true;\n          _this.loop.style.background = '#ddd';\n        } else {\n          media.loop = false;\n          _this.loop.style.background = 'none';\n        }\n      }\n    };\n\n    media.onended = function () {\n      le5le_store_1.Store.set('mediaEnd', node);\n\n      if (_this.media === media) {\n        _this.playBtn.className = _this.options.playIcon;\n      }\n\n      _this.playNext(node.nextPlay);\n    };\n\n    media.onloadedmetadata = function () {\n      _this.getMediaCurrent();\n    };\n\n    media.src = node[type];\n    player.appendChild(media);\n    player.appendChild(current);\n    this[type + 's'][node.id] = {\n      player: player,\n      current: current,\n      media: media\n    };\n    this.canvas.appendChild(player);\n    return player;\n  };\n\n  DivLayer.prototype.playNext = function (next) {\n    if (!next) {\n      return;\n    }\n\n    for (var _i = 0, _a = this.data.nodes; _i < _a.length; _i++) {\n      var item = _a[_i];\n\n      if (item.tags.indexOf(next) > -1) {\n        if (item.audio && this.audios[item.id] && this.audios[item.id].media && this.audios[item.id].media.paused) {\n          this.audios[item.id].media.play();\n        } else if (item.video && this.videos[item.id].media && this.videos[item.id].media.paused) {\n          this.videos[item.id].media.play();\n        }\n      }\n    }\n  };\n\n  DivLayer.prototype.addIframe = function (node) {\n    var iframe = document.createElement('iframe');\n    iframe.scrolling = 'no';\n    iframe.frameBorder = '0';\n    iframe.src = node.iframe;\n    this.iframes[node.id] = iframe;\n    this.canvas.appendChild(iframe);\n    return iframe;\n  };\n\n  DivLayer.prototype.addGif = function (node) {\n    this.gifs[node.id] = node.img;\n    this.canvas.appendChild(node.img);\n    return node.img;\n  };\n\n  DivLayer.prototype.setElemPosition = function (node, elem) {\n    if (!elem) {\n      return;\n    }\n\n    elem.style.position = 'absolute';\n    elem.style.outline = 'none';\n    elem.style.left = node.rect.x + 'px';\n    elem.style.top = node.rect.y + 'px';\n    elem.style.width = node.rect.width + 'px';\n    elem.style.height = node.rect.height + 'px';\n\n    if (node.rotate || node.offsetRotate) {\n      elem.style.transform = \"rotate(\" + (node.rotate + node.offsetRotate) + \"deg)\";\n    }\n\n    if (node.video && this.videos[node.id] && this.videos[node.id].media) {\n      this.videos[node.id].media.style.width = '100%';\n      this.videos[node.id].media.style.height = '100%';\n    }\n\n    if (this.data.locked < status_1.Lock.Readonly) {\n      elem.style.userSelect = 'none';\n      elem.style.pointerEvents = 'none';\n    } else {\n      elem.style.userSelect = 'initial';\n      elem.style.pointerEvents = 'initial';\n    }\n  };\n\n  DivLayer.prototype.removeDiv = function (item) {\n    if (this.curNode && item.id === this.curNode.id) {\n      this.curNode = null;\n      this.media = null;\n      this.player.style.top = '-99999px';\n    }\n\n    if (item.audio) {\n      this.canvas.removeChild(this.audios[item.id].player);\n      this.audios[item.id] = null;\n    }\n\n    if (item.video) {\n      this.canvas.removeChild(this.videos[item.id].player);\n      this.videos[item.id] = null;\n    }\n\n    if (item.iframe) {\n      this.canvas.removeChild(this.iframes[item.id]);\n      this.iframes[item.id] = null;\n    }\n\n    if (item.elementId) {\n      this.canvas.removeChild(this.elements[item.id]);\n      this.elements[item.id] = null;\n    }\n\n    if (item.gif) {\n      this.canvas.removeChild(this.gifs[item.id]);\n      this.gifs[item.id] = null;\n    }\n\n    if (item.children) {\n      for (var _i = 0, _a = item.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        this.removeDiv(child);\n      }\n    }\n  };\n\n  DivLayer.prototype.clear = function () {\n    this.canvas.innerHTML = '';\n    this.audios = {};\n    this.videos = {};\n    this.iframes = {};\n    this.elements = {};\n    this.gifs = {};\n  };\n\n  DivLayer.prototype.formatSeconds = function (seconds) {\n    var h = Math.floor(seconds / 3600);\n    var m = Math.floor(seconds / 60) % 60;\n    var s = Math.floor(seconds % 60);\n    var txt = s + '';\n\n    if (m) {\n      txt = m + ':' + s;\n    } else {\n      txt = '0:' + s;\n    }\n\n    if (h) {\n      txt = h + ':' + m + ':' + s;\n    }\n\n    return txt;\n  };\n\n  DivLayer.prototype.resize = function (size) {\n    if (size) {\n      this.canvas.style.width = size.width + 'px';\n      this.canvas.style.height = size.height + 'px';\n    } else {\n      if (this.options.width && this.options.width !== 'auto') {\n        this.canvas.style.width = this.options.width + 'px';\n      } else {\n        this.canvas.style.width = this.parentElem.clientWidth + 'px';\n      }\n\n      if (this.options.height && this.options.height !== 'auto') {\n        this.canvas.style.height = this.options.height + 'px';\n      } else {\n        this.canvas.style.height = this.parentElem.clientHeight - 8 + 'px';\n      }\n    }\n  };\n\n  DivLayer.prototype.render = function () {\n    for (var _i = 0, _a = this.data.nodes; _i < _a.length; _i++) {\n      var item = _a[_i];\n      this.addDiv(item);\n    }\n  };\n\n  DivLayer.prototype.destroy = function () {\n    this.clear();\n    this.subcribe.unsubscribe();\n    this.subcribeNode.unsubscribe();\n  };\n\n  return DivLayer;\n}();\n\nexports.DivLayer = DivLayer;","map":null,"metadata":{},"sourceType":"script"}