{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Point =\n/** @class */\nfunction () {\n  function Point(x, y, direction, anchorIndex, id, hidden) {\n    this.x = x;\n    this.y = y;\n    this.direction = direction;\n    this.anchorIndex = anchorIndex;\n    this.id = id;\n    this.hidden = hidden;\n  }\n\n  Point.prototype.floor = function () {\n    this.x |= 0;\n    this.y |= 0;\n  };\n\n  Point.prototype.round = function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n  };\n\n  Point.prototype.clone = function () {\n    var pt = new Point(this.x, this.y, this.direction, this.anchorIndex, this.id, this.hidden);\n\n    if (this.data) {\n      pt.data = this.data;\n    }\n\n    if (this.mode) {\n      pt.mode = this.mode;\n    }\n\n    return pt;\n  };\n\n  Point.prototype.hit = function (pt, radius) {\n    if (radius === void 0) {\n      radius = 5;\n    }\n\n    return pt.x > this.x - radius && pt.x < this.x + radius && pt.y > this.y - radius && pt.y < this.y + radius;\n  };\n\n  Point.prototype.rotate = function (angle, center) {\n    if (!angle || angle === 360) {\n      return this;\n    }\n\n    angle *= Math.PI / 180;\n    var x = (this.x - center.x) * Math.cos(angle) - (this.y - center.y) * Math.sin(angle) + center.x;\n    var y = (this.x - center.x) * Math.sin(angle) + (this.y - center.y) * Math.cos(angle) + center.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  };\n\n  return Point;\n}();\n\nexports.Point = Point;","map":null,"metadata":{},"sourceType":"script"}