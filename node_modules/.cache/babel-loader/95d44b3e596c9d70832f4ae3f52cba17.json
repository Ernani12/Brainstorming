{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernan\\\\Downloads\\\\react-mindmap-master\\\\react-mindmap-master\\\\src\\\\component\\\\toolbar\\\\toolbar-item-theme.js\";\nimport defaultThemeImg from \"../../images/default.jpg\";\nimport theme1Img from \"../../images/theme1.jpg\";\nimport theme2Img from \"../../images/theme2.jpg\";\nimport theme3Img from \"../../images/theme3.jpg\";\nimport theme4Img from \"../../images/theme4.jpg\";\nimport cx from \"classnames\";\nimport { iconClassName } from \"@blink-mind/renderer-react\";\nimport { Popover } from \"@blueprintjs/core\";\nimport React from \"react\";\nexport function ToolbarItemTheme(props) {\n  const onClickSetTheme = themeKey => e => {\n    const {\n      diagram\n    } = props;\n    const diagramProps = diagram.getDiagramProps();\n    const {\n      controller\n    } = diagramProps;\n    controller.run(\"setTheme\", { ...diagramProps,\n      themeKey\n    });\n  };\n\n  const themes = [[\"default\", defaultThemeImg], [\"theme1\", theme1Img], [\"theme2\", theme2Img], [\"theme3\", theme3Img], [\"theme4\", theme4Img]];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx(\"bm-toolbar-item\", iconClassName(\"theme\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    enforceFocus: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bm-toolbar-popover-target\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bm-popover-theme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, themes.map(theme => /*#__PURE__*/React.createElement(\"div\", {\n    key: theme[0],\n    className: \"bm-theme-item\",\n    onClick: onClickSetTheme(theme[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"bm-theme-img\",\n    src: theme[1],\n    alt: theme[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/ernan/Downloads/react-mindmap-master/react-mindmap-master/src/component/toolbar/toolbar-item-theme.js"],"names":["defaultThemeImg","theme1Img","theme2Img","theme3Img","theme4Img","cx","iconClassName","Popover","React","ToolbarItemTheme","props","onClickSetTheme","themeKey","e","diagram","diagramProps","getDiagramProps","controller","run","themes","map","theme"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,0BAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,QAAMC,eAAe,GAAGC,QAAQ,IAAIC,CAAC,IAAI;AACvC,UAAM;AAAEC,MAAAA;AAAF,QAAcJ,KAApB;AACA,UAAMK,YAAY,GAAGD,OAAO,CAACE,eAAR,EAArB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBF,YAAvB;AACAE,IAAAA,UAAU,CAACC,GAAX,CAAe,UAAf,EAA2B,EAAE,GAAGH,YAAL;AAAmBH,MAAAA;AAAnB,KAA3B;AACD,GALD;;AAMA,QAAMO,MAAM,GAAG,CACb,CAAC,SAAD,EAAYnB,eAAZ,CADa,EAEb,CAAC,QAAD,EAAWC,SAAX,CAFa,EAGb,CAAC,QAAD,EAAWC,SAAX,CAHa,EAIb,CAAC,QAAD,EAAWC,SAAX,CAJa,EAKb,CAAC,QAAD,EAAWC,SAAX,CALa,CAAf;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEC,EAAE,CAAC,iBAAD,EAAoBC,aAAa,CAAC,OAAD,CAAjC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,MAAM,CAACC,GAAP,CAAWC,KAAK,iBACf;AACE,IAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CADZ;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,OAAO,EAAEV,eAAe,CAACU,KAAK,CAAC,CAAD,CAAN,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAAxC;AAA6C,IAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CADH,CAFF,CADF,CADF;AAkBD","sourcesContent":["import defaultThemeImg from \"../../images/default.jpg\";\nimport theme1Img from \"../../images/theme1.jpg\";\nimport theme2Img from \"../../images/theme2.jpg\";\nimport theme3Img from \"../../images/theme3.jpg\";\nimport theme4Img from \"../../images/theme4.jpg\";\nimport cx from \"classnames\";\nimport { iconClassName } from \"@blink-mind/renderer-react\";\nimport { Popover } from \"@blueprintjs/core\";\nimport React from \"react\";\n\nexport function ToolbarItemTheme(props) {\n  const onClickSetTheme = themeKey => e => {\n    const { diagram } = props;\n    const diagramProps = diagram.getDiagramProps();\n    const { controller } = diagramProps;\n    controller.run(\"setTheme\", { ...diagramProps, themeKey });\n  };\n  const themes = [\n    [\"default\", defaultThemeImg],\n    [\"theme1\", theme1Img],\n    [\"theme2\", theme2Img],\n    [\"theme3\", theme3Img],\n    [\"theme4\", theme4Img]\n  ];\n\n  return (\n    <div className={cx(\"bm-toolbar-item\", iconClassName(\"theme\"))}>\n      <Popover enforceFocus={false}>\n        <div className=\"bm-toolbar-popover-target\" />\n        <div className=\"bm-popover-theme\">\n          {themes.map(theme => (\n            <div\n              key={theme[0]}\n              className=\"bm-theme-item\"\n              onClick={onClickSetTheme(theme[0])}\n            >\n              <img className=\"bm-theme-img\" src={theme[1]} alt={theme[0]} />\n            </div>\n          ))}\n        </div>\n      </Popover>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}