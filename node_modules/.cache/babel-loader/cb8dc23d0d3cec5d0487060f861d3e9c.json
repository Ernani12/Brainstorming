{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar React = _interopRequireWildcard(_react);\n\nrequire('slate');\n\nvar _immutable = require('immutable');\n\nvar _TOKEN_MARK = require('./TOKEN_MARK');\n\nvar _TOKEN_MARK2 = _interopRequireDefault(_TOKEN_MARK);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Default filter for code blocks\n */\n\n\nfunction defaultOnlyIn(node) {\n  return node.object === 'block' && node.type === 'code_block';\n}\n/**\n * Default getter for syntax\n */\n\n\nfunction defaultGetSyntax(node) {\n  return 'javascript';\n}\n/**\n * Default rendering for marks\n */\n\n\nfunction defaultRenderMark(props, editor, next) {\n  var mark = props.mark;\n\n  if (mark.type !== _TOKEN_MARK2.default) {\n    return next();\n  }\n\n  var className = mark.data.get('className');\n  return React.createElement('span', {\n    className: className\n  }, props.children);\n}\n/**\n * The plugin options\n */\n\n\nvar Options = function (_Record) {\n  _inherits(Options, _Record);\n\n  function Options() {\n    _classCallCheck(this, Options);\n\n    return _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).apply(this, arguments));\n  }\n\n  return Options;\n}((0, _immutable.Record)({\n  onlyIn: defaultOnlyIn,\n  getSyntax: defaultGetSyntax,\n  renderMark: defaultRenderMark\n}));\n\nexports.default = Options;","map":null,"metadata":{},"sourceType":"script"}