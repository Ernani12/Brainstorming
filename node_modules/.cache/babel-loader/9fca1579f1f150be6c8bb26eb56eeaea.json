{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar le5le_store_1 = require(\"le5le-store\");\n\nvar point_1 = require(\"./models/point\");\n\nfunction pointInRect(point, vertices) {\n  if (vertices.length < 3) {\n    return false;\n  }\n\n  var isIn = false;\n  var last = vertices[vertices.length - 1];\n\n  for (var _i = 0, vertices_1 = vertices; _i < vertices_1.length; _i++) {\n    var item = vertices_1[_i];\n\n    if (item.y < point.y && last.y >= point.y || item.y >= point.y && last.y < point.y) {\n      if (item.x + (point.y - item.y) * (last.x - item.x) / (last.y - item.y) > point.x) {\n        isIn = !isIn;\n      }\n    }\n\n    last = item;\n  }\n\n  return isIn;\n}\n\nexports.pointInRect = pointInRect;\n\nfunction pointInLine(point, from, to) {\n  var points = [new point_1.Point(from.x - 8, from.y - 8), new point_1.Point(to.x - 8, to.y - 8), new point_1.Point(to.x + 8, to.y + 8), new point_1.Point(from.x + 8, from.y + 8)];\n  return pointInRect(point, points);\n}\n\nexports.pointInLine = pointInLine;\n\nfunction lineLen(from, to) {\n  var len = Math.sqrt(Math.pow(Math.abs(from.x - to.x), 2) + Math.pow(Math.abs(from.y - to.y), 2));\n  return len | 0;\n}\n\nexports.lineLen = lineLen;\n\nfunction curveLen(from, cp1, cp2, to) {\n  var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  path.setAttribute('d', \"M\" + from.x + \" \" + from.y + \" C\" + cp1.x + \" \" + cp1.y + \" \" + cp2.x + \" \" + cp2.y + \" \" + to.x + \" \" + to.y);\n  return path.getTotalLength() | 0;\n}\n\nexports.curveLen = curveLen; // https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)\n// Version 4.0\n\nfunction pSBC(p, c0, c1, l) {\n  var r,\n      g,\n      b,\n      P,\n      f,\n      t,\n      h,\n      a = typeof c1 === 'string';\n  var i = parseInt,\n      m = Math.round;\n\n  if (typeof p !== 'number' || p < -1 || p > 1 || typeof c0 !== 'string' || c0[0] !== 'r' && c0[0] !== '#' || c1 && !a) {\n    return null;\n  }\n\n  var pSBCr = function (d) {\n    var _a;\n\n    var n = d.length;\n    var x = {};\n\n    if (n > 9) {\n      (_a = d = d.split(','), r = _a[0], g = _a[1], b = _a[2], a = _a[3], _a), n = d.length;\n\n      if (n < 3 || n > 4) {\n        return null;\n      }\n\n      x.r = i(r[3] === 'a' ? r.slice(5) : r.slice(4)), x.g = i(g), x.b = i(b), x.a = a ? parseFloat(a) : -1;\n    } else {\n      if (n === 8 || n === 6 || n < 4) {\n        return null;\n      }\n\n      if (n < 6) {\n        d = '#' + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (n > 4 ? d[4] + d[4] : '');\n      }\n\n      d = i(d.slice(1), 16);\n\n      if (n === 9 || n === 5) {\n        x.r = d >> 24 & 255, x.g = d >> 16 & 255, x.b = d >> 8 & 255, x.a = m((d & 255) / 0.255) / 1000;\n      } else {\n        x.r = d >> 16, x.g = d >> 8 & 255, x.b = d & 255, x.a = -1;\n      }\n    }\n\n    return x;\n  };\n\n  h = c0.length > 9, h = a ? c1.length > 9 ? true : c1 === 'c' ? !h : false : h, f = pSBCr(c0), P = p < 0, t = c1 && c1 !== 'c' ? pSBCr(c1) : P ? {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: -1\n  } : {\n    r: 255,\n    g: 255,\n    b: 255,\n    a: -1\n  }, p = P ? p * -1 : p, P = 1 - p;\n\n  if (!f || !t) {\n    return null;\n  }\n\n  if (l) {\n    r = m(P * f.r + p * t.r), g = m(P * f.g + p * t.g), b = m(P * f.b + p * t.b);\n  } else {\n    r = m(Math.pow(P * Math.pow(f.r, 2) + p * Math.pow(t.r, 2), 0.5)), g = m(Math.pow(P * Math.pow(f.g, 2) + p * Math.pow(t.g, 2), 0.5)), b = m(Math.pow(P * Math.pow(f.b, 2) + p * Math.pow(t.b, 2), 0.5));\n  }\n\n  a = f.a, t = t.a, f = a >= 0 || t >= 0, a = f ? a < 0 ? t : t < 0 ? a : a * P + t * p : 0;\n\n  if (h) {\n    return 'rgb' + (f ? 'a(' : '(') + r + ',' + g + ',' + b + (f ? ',' + m(a * 1000) / 1000 : '') + ')';\n  } else {\n    return '#' + (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0)).toString(16).slice(1, f ? undefined : -2);\n  }\n}\n\nexports.pSBC = pSBC;\n\nfunction abs(num, percent) {\n  if (+percent) {\n    return +percent;\n  }\n\n  if (!percent || percent[percent.length - 1] !== '%') {\n    return 0;\n  }\n\n  percent = percent.substr(0, percent.length - 1);\n  return Math.round(num * +percent / 100);\n}\n\nexports.abs = abs;\n\nfunction createDiv(node) {\n  var div = document.createElement('div');\n  div.style.position = 'absolute';\n  div.style.outline = 'none';\n  div.style.left = '-9999px';\n  div.style.bottom = '-9999px';\n  div.style.width = node.rect.width + 'px';\n  div.style.height = node.rect.height + '2px';\n\n  if (node.elementId) {\n    div.id = node.elementId;\n  }\n\n  return div;\n}\n\nexports.createDiv = createDiv;\n\nfunction loadJS(url, callback, render) {\n  var loaderScript = document.createElement('script');\n  loaderScript.type = 'text/javascript';\n  loaderScript.src = url;\n  loaderScript.addEventListener('load', function () {\n    if (callback) {\n      callback();\n    }\n\n    if (render) {\n      le5le_store_1.Store.set('LT:render', true);\n    }\n  });\n  document.body.appendChild(loaderScript);\n}\n\nexports.loadJS = loadJS;","map":null,"metadata":{},"sourceType":"script"}