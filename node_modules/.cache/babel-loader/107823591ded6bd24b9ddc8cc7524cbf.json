{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _isHotkey = require('is-hotkey');\n\nrequire('slate');\n\nvar _utils = require('../utils');\n\nvar _onTab = require('./onTab');\n\nvar _onTab2 = _interopRequireDefault(_onTab);\n\nvar _onShiftTab = require('./onShiftTab');\n\nvar _onShiftTab2 = _interopRequireDefault(_onShiftTab);\n\nvar _onEnter = require('./onEnter');\n\nvar _onEnter2 = _interopRequireDefault(_onEnter);\n\nvar _onModEnter = require('./onModEnter');\n\nvar _onModEnter2 = _interopRequireDefault(_onModEnter);\n\nvar _onBackspace = require('./onBackspace');\n\nvar _onBackspace2 = _interopRequireDefault(_onBackspace);\n\nvar _onSelectAll = require('./onSelectAll');\n\nvar _onSelectAll2 = _interopRequireDefault(_onSelectAll);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar isModA = (0, _isHotkey.isKeyHotkey)('mod+a');\nvar isShiftTab = (0, _isHotkey.isKeyHotkey)('shift+tab');\nvar isTab = (0, _isHotkey.isKeyHotkey)('tab');\nvar isModEnter = (0, _isHotkey.isKeyHotkey)('mod+enter');\nvar isEnter = (0, _isHotkey.isKeyHotkey)('enter');\nvar isBackspace = (0, _isHotkey.isKeyHotkey)('backspace');\n/**\n * User is pressing a key in the editor\n */\n\nfunction onKeyDown(opts, event, editor, next) {\n  var value = editor.value;\n  var currentCode = (0, _utils.getCurrentCode)(opts, value); // Inside code ?\n\n  if (!currentCode) {\n    return next();\n  } // Add opts in the argument list\n\n\n  var args = [opts, event, editor, next]; // Select all the code in the block (Mod+a)\n\n  if (opts.selectAll && isModA(event)) {\n    return _onSelectAll2.default.apply(undefined, args);\n  } else if (isShiftTab(event)) {\n    // User is pressing Shift+Tab\n    return _onShiftTab2.default.apply(undefined, args);\n  } else if (isTab(event)) {\n    // User is pressing Tab\n    return _onTab2.default.apply(undefined, args);\n  } else if (opts.exitBlockType && isModEnter(event)) {\n    // User is pressing Mod+Enter\n    return _onModEnter2.default.apply(undefined, args);\n  } else if (isEnter(event)) {\n    // User is pressing Enter\n    return _onEnter2.default.apply(undefined, args);\n  } else if (isBackspace(event)) {\n    // User is pressing Backspace\n    return _onBackspace2.default.apply(undefined, args);\n  }\n\n  return next();\n}\n\nexports.default = onKeyDown;","map":null,"metadata":{},"sourceType":"script"}