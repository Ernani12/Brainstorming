{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar point_1 = require(\"../../models/point\");\n\nvar direction_1 = require(\"../../models/direction\");\n\nfunction pentagramAnchors(node) {\n  node.anchors.push(new point_1.Point(Math.cos(18 / 180 * Math.PI) * node.rect.width / 2 + node.rect.x + node.rect.width / 2, -Math.sin(18 / 180 * Math.PI) * node.rect.width / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Right));\n  node.anchors.push(new point_1.Point(Math.cos((18 + 72) / 180 * Math.PI) * node.rect.width / 2 + node.rect.x + node.rect.width / 2, -Math.sin((18 + 72) / 180 * Math.PI) * node.rect.width / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Up));\n  node.anchors.push(new point_1.Point(Math.cos((18 + 72 * 2) / 180 * Math.PI) * node.rect.width / 2 + node.rect.x + node.rect.width / 2, -Math.sin((18 + 72 * 2) / 180 * Math.PI) * node.rect.width / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Left));\n  node.anchors.push(new point_1.Point(Math.cos((18 + 72 * 3) / 180 * Math.PI) * node.rect.width / 2 + node.rect.x + node.rect.width / 2, -Math.sin((18 + 72 * 3) / 180 * Math.PI) * node.rect.width / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Bottom));\n  node.anchors.push(new point_1.Point(Math.cos((18 + 72 * 4) / 180 * Math.PI) * node.rect.width / 2 + node.rect.x + node.rect.width / 2, -Math.sin((18 + 72 * 4) / 180 * Math.PI) * node.rect.width / 2 + node.rect.y + node.rect.height / 2, direction_1.Direction.Bottom));\n}\n\nexports.pentagramAnchors = pentagramAnchors;","map":null,"metadata":{},"sourceType":"script"}